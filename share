https://limewire.com/d/ocfQY#Aut2h2Z2M1
https://limewire.com/d/ocfQY#Aut2h2Z2M1


from scapy.all import *

# Configuration
mac = "d0:5f:64:d4:54:ca"
iface = "eth0"  # ← Remplace par ton interface réseau
mac_bytes = binascii.unhexlify(mac.replace(":", ""))
client_id = b'\x01' + mac_bytes

# Identifiant transaction aléatoire (mais constant pour Discover + Request)
xid = RandInt()

# --- Étape 1: DHCP Discover ---
discover = (
    Ether(dst="ff:ff:ff:ff:ff:ff", src=mac) /
    IP(src="0.0.0.0", dst="255.255.255.255") /
    UDP(sport=68, dport=67) /
    BOOTP(chaddr=mac_bytes + b'\x00'*10, xid=xid, flags=0x8000) /
    DHCP(options=[
        ('message-type', 'discover'),
        ('client_id', client_id),
        ('vendor_class_id', 'android-dhcp-97'),
        ('param_req_list', [1, 3, 6, 15, 26, 28, 51, 58, 59, 43]),
        ('end')
    ])
)

print("[*] Envoi du DHCP Discover...")
sendp(discover, iface=iface, verbose=0)

# --- Étape 2: Attente du DHCP Offer ---
print("[*] Attente du DHCP Offer...")

offer = sniff(
    iface=iface,
    filter="udp and (port 67 or 68)",
    timeout=5,
    lfilter=lambda p: DHCP in p and p[BOOTP].xid == xid and
                      ('message-type', 2) in p[DHCP].options  # type 2 = Offer
)

if not offer:
    print("[-] Aucun DHCP Offer reçu.")
    exit(1)

offer_pkt = offer[0]
offered_ip = offer_pkt[BOOTP].yiaddr

# Trouver le Server Identifier (option 54)
server_id = None
for opt in offer_pkt[DHCP].options:
    if isinstance(opt, tuple) and opt[0] == 'server_id':
        server_id = opt[1]
        break

if not server_id:
    print("[-] Server ID (option 54) non trouvé.")
    exit(1)

print(f"[+] DHCP Offer reçu : IP proposée = {offered_ip}, Server ID = {server_id}")

# --- Étape 3: DHCP Request ---
request = (
    Ether(dst="ff:ff:ff:ff:ff:ff", src=mac) /
    IP(src="0.0.0.0", dst="255.255.255.255") /
    UDP(sport=68, dport=67) /
    BOOTP(chaddr=mac_bytes + b'\x00'*10, xid=xid, flags=0x8000) /
    DHCP(options=[
        ('message-type', 'request'),
        ('client_id', client_id),
        ('vendor_class_id', 'android-dhcp-97'),
        ('requested_addr', offered_ip),
        ('server_id', server_id),
        ('param_req_list', [1, 3, 6, 15, 26, 28, 51, 58, 59, 43]),
        ('end')
    ])
)

print("[*] Envoi du DHCP Request...")
sendp(request, iface=iface, verbose=0)
print("[+] Terminé. IP demandée.")
